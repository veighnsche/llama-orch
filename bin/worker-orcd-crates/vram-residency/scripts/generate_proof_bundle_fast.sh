#!/usr/bin/env bash
# Generate proof bundle for vram-residency (FAST mode - skip long tests)
#
# This script captures ALL test results with skip-long-tests feature enabled.
# Run with: ./scripts/generate_proof_bundle_fast.sh

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CRATE_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
cd "$CRATE_ROOT"

echo "📦 Generating comprehensive proof bundle for vram-residency..."
echo "   Mode: FAST (skip-long-tests)"
echo "   Capturing ALL tests automatically"
echo ""

# Set proof bundle directory
TIMESTAMP=$(date +%s)
BUNDLE_DIR="$CRATE_ROOT/.proof_bundle/unit-fast/$TIMESTAMP"
mkdir -p "$BUNDLE_DIR"

echo "   Running tests with --features skip-long-tests..."

# Run tests with JSON output and skip-long-tests feature
cargo +nightly test -p vram-residency \
    --features skip-long-tests \
    -- --format json -Z unstable-options \
    2>&1 | tee "$BUNDLE_DIR/raw_output.txt" | \
    grep '"type": "test"' > "$BUNDLE_DIR/test_events.jsonl" || true

# Count tests (note: JSON has spaces like "type": "test")
TOTAL=$(grep -c '"type": "test"' "$BUNDLE_DIR/test_events.jsonl")
PASSED=$(grep '"event": "ok"' "$BUNDLE_DIR/test_events.jsonl" | wc -l)
FAILED=$(grep '"event": "failed"' "$BUNDLE_DIR/test_events.jsonl" | wc -l)
IGNORED=$(grep '"event": "ignored"' "$BUNDLE_DIR/test_events.jsonl" | wc -l)

# Calculate pass rate
if [ "$TOTAL" -gt 0 ]; then
    PASS_RATE=$(awk "BEGIN {printf \"%.1f\", ($PASSED / $TOTAL) * 100}")
else
    PASS_RATE="0.0"
fi

echo ""
echo "✅ Comprehensive proof bundle generated!"
echo "   Mode: FAST (skip-long-tests)"
echo "   Total: $TOTAL tests"
echo "   Passed: $PASSED ($PASS_RATE%)"
echo "   Failed: $FAILED"
echo "   Ignored: $IGNORED"
echo "   Location: .proof_bundle/unit-fast/$TIMESTAMP/"
echo ""

# Generate summary.json
cat > "$BUNDLE_DIR/summary.json" <<EOF
{
  "total": $TOTAL,
  "passed": $PASSED,
  "failed": $FAILED,
  "ignored": $IGNORED,
  "pass_rate": $PASS_RATE,
  "mode": "fast",
  "features": ["skip-long-tests"],
  "timestamp": "$TIMESTAMP"
}
EOF

# Generate test_report.md
cat > "$BUNDLE_DIR/test_report.md" <<EOF
# AUTOGENERATED: Proof Bundle

# Test Report - vram-residency

**Mode**: FAST (skip-long-tests)
**Status**: $([ "$FAILED" -eq 0 ] && echo "✅ ALL TESTS PASSED" || echo "❌ TESTS FAILED")
**Total Tests**: $TOTAL
**Passed**: $PASSED ($PASS_RATE%)
**Failed**: $FAILED
**Ignored**: $IGNORED

---

## Test Coverage

- ✅ Integration tests (--tests)
- ✅ Feature: skip-long-tests enabled
- ⏭️ Property tests (skipped)
- ⏭️ Stress tests (skipped)

---

## Evidence Files

- \`test_events.jsonl\` - All test events from cargo test
- \`summary.json\` - Aggregate statistics
- \`test_report.md\` - This human-readable report
- \`raw_output.txt\` - Full cargo test output

---

**Package**: vram-residency
**Tests Captured**: $TOTAL
**Timestamp**: $TIMESTAMP
EOF

if [ "$TOTAL" -lt 20 ]; then
    echo "⚠️  WARNING: Expected 20+ tests, got $TOTAL"
    exit 1
fi

if [ "$FAILED" -gt 0 ]; then
    echo "⚠️  $FAILED tests failed - proof bundle captured failures"
    exit 1
fi

echo "🎯 Success! Captured $TOTAL tests"
echo "   Note: Long-running tests skipped (property tests, stress tests)"
echo ""
