[package]
name = "orchestratord"
version = "0.0.0"
edition = "2021"
license = "GPL-3.0-or-later"

[features]
# MVP defaults: server and artifacts enabled; other features opt-in.
default = ["server", "artifacts"]

# Server surface and request handling
server = [
    "dep:axum",
    "dep:tokio",
    "dep:http",
    "dep:futures",
    "dep:uuid",
]

# Prometheus metrics and structured logging setup
metrics = [
    "dep:prometheus",
    "dep:tracing-subscriber",
]

# Artifact registry and content-addressed storage helpers
artifacts = [
    "dep:sha2",
    "dep:chrono",
]


[lib]
name = "orchestratord"
path = "src/lib.rs"

[[bin]]
name = "orchestratord"
path = "src/main.rs"
[dependencies]
axum = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, optional = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
serde = { workspace = true, features = ["derive"] }
http = { workspace = true, optional = true }
contracts-api-types = { path = "../../contracts/api-types" }
orchestrator-core = { path = "../orchestratord-crates/orchestrator-core" }
catalog-core = { path = "../pool-managerd-crates/model-catalog" }
model-provisioner = { path = "../pool-managerd-crates/model-provisioner" }
regex = { workspace = true }
serde_json = { workspace = true }
prometheus = { version = "0.13", optional = true }
reqwest = { version = "0.11", features = ["json"] }
once_cell = "1"
futures = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }
chrono = { version = "0.4", default-features = false, features = ["clock"], optional = true }
sha2 = { workspace = true, optional = true }
hex = "0.4"
auth-min = { path = "../shared-crates/auth-min" }
observability-narration-core = { path = "../shared-crates/narration-core" }
# Cloud profile support
pool-registry-types = { path = "../shared-crates/pool-registry-types" }
service-registry = { path = "../orchestratord-crates/node-registry" }
rand = "0.8"

[dev-dependencies]
openapiv3 = { workspace = true }
serde_yaml = { workspace = true }
tower = { version = "0.5", features = ["util"] }
tempfile = "3"
