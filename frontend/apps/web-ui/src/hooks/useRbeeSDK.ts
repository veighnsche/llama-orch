// TEAM-288: React hook for rbee-sdk WASM initialization

'use client';

import { useState, useEffect } from 'react';

// Type definitions (auto-generated by wasm-pack)
type RbeeClient = any;
type HeartbeatMonitor = any;
type OperationBuilder = any;

interface RbeeSDK {
  RbeeClient: typeof RbeeClient;
  HeartbeatMonitor: typeof HeartbeatMonitor;
  OperationBuilder: typeof OperationBuilder;
}

export function useRbeeSDK() {
  const [sdk, setSDK] = useState<RbeeSDK | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<Error | null>(null);

  useEffect(() => {
    async function loadWASM() {
      try {
        // TEAM-288: Dynamic import of WASM module
        // This works in Next.js 15 with webpack asyncWebAssembly
        const wasmModule = await import('@rbee/sdk');
        
        // Initialize WASM (calls init() automatically in bundler mode)
        await wasmModule.default();
        
        setSDK({
          RbeeClient: wasmModule.RbeeClient,
          HeartbeatMonitor: wasmModule.HeartbeatMonitor,
          OperationBuilder: wasmModule.OperationBuilder,
        });
        setLoading(false);
      } catch (err) {
        console.error('Failed to load rbee-sdk WASM:', err);
        setError(err as Error);
        setLoading(false);
      }
    }

    loadWASM();
  }, []);

  return { sdk, loading, error };
}
