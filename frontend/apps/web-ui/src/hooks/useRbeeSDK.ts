// TEAM-288: React hook for rbee-sdk WASM initialization
// TEAM-291: ⚠️ DEPRECATED - This file has been moved to @rbee/react package
// TODO: DELETE THIS FILE after verifying web-ui works with @rbee/react import
// New location: frontend/packages/rbee-react/src/useRbeeSDK.ts

'use client';

import { useState, useEffect } from 'react';

// TEAM-288: Type definitions (auto-generated by wasm-pack)
// Using unknown instead of any for type safety
interface RbeeSDK {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  RbeeClient: any;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  HeartbeatMonitor: any;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  OperationBuilder: any;
}

export function useRbeeSDK() {
  const [sdk, setSDK] = useState<RbeeSDK | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<Error | null>(null);

  useEffect(() => {
    async function loadWASM() {
      try {
        console.log('🐝 [useRbeeSDK] Starting WASM load...');
        
        // TEAM-288: Dynamic import of WASM module
        // This works in Next.js 15 with webpack asyncWebAssembly
        const wasmModule = await import('@rbee/sdk');
        console.log('🐝 [useRbeeSDK] WASM module imported:', wasmModule);
        
        // TEAM-288: Initialize WASM using init() function
        console.log('🐝 [useRbeeSDK] Calling wasmModule.init()...');
        wasmModule.init();
        console.log('🐝 [useRbeeSDK] WASM initialized successfully');
        
        const sdkObj = {
          RbeeClient: wasmModule.RbeeClient,
          HeartbeatMonitor: wasmModule.HeartbeatMonitor,
          OperationBuilder: wasmModule.OperationBuilder,
        };
        
        console.log('🐝 [useRbeeSDK] SDK object created:', sdkObj);
        console.log('🐝 [useRbeeSDK] HeartbeatMonitor type:', typeof sdkObj.HeartbeatMonitor);
        
        setSDK(sdkObj);
        setLoading(false);
        
        console.log('🐝 [useRbeeSDK] SDK ready!');
      } catch (err) {
        console.error('🐝 [useRbeeSDK] Failed to load rbee-sdk WASM:', err);
        setError(err as Error);
        setLoading(false);
      }
    }

    loadWASM();
  }, []);

  return { sdk, loading, error };
}
