name: Worker-orcd CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'bin/worker-orcd/**'
      - '.github/workflows/worker-orcd-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'bin/worker-orcd/**'
      - '.github/workflows/worker-orcd-ci.yml'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy
      
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        run: cargo fmt --all -- --check
        working-directory: bin/worker-orcd
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings -A dead_code
        working-directory: bin/worker-orcd
      
      - name: Build
        run: cargo build --verbose
        working-directory: bin/worker-orcd
      
      - name: Run unit tests
        run: cargo test --lib --bins --verbose
        working-directory: bin/worker-orcd
      
      - name: Run integration tests
        run: cargo test --tests --verbose
        working-directory: bin/worker-orcd
      
      - name: Run doc tests
        run: cargo test --doc --verbose
        working-directory: bin/worker-orcd

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      
      - name: Generate coverage
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
        working-directory: bin/worker-orcd
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./bin/worker-orcd/cobertura.xml
          fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Run cargo audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Run benchmarks
        run: cargo bench --bench performance_baseline -- --save-baseline main
        working-directory: bin/worker-orcd
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: bin/worker-orcd/target/criterion

  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Build release
        run: cargo build --release --verbose
        working-directory: bin/worker-orcd
      
      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: worker-orcd-release
          path: bin/worker-orcd/target/release/worker-orcd

# Built by Foundation-Alpha üèóÔ∏è
