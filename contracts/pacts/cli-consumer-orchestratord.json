{
  "consumer": {
    "name": "cli-consumer"
  },
  "interactions": [
    {
      "description": "enqueue task accepted",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "determinism": "strict",
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "sampler_profile_version": "v1",
          "seed": 123456789,
          "session_id": "22222222-2222-4222-8222-222222222222",
          "task_id": "11111111-1111-4111-8111-111111111111",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "backoff_ms": 0,
          "predicted_start_ms": 420,
          "queue_position": 3,
          "task_id": "11111111-1111-4111-8111-111111111111"
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 202
      }
    },
    {
      "description": "cancel task no content",
      "request": {
        "method": "POST",
        "path": "/v1/tasks/11111111-1111-4111-8111-111111111111/cancel"
      },
      "response": {
        "status": 204
      }
    },
    {
      "description": "get session info",
      "request": {
        "method": "GET",
        "path": "/v1/sessions/22222222-2222-4222-8222-222222222222"
      },
      "response": {
        "body": {
          "kv_bytes": 0,
          "kv_warmth": false,
          "ttl_ms_remaining": 600000,
          "turns": 1
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 200
      }
    },
    {
      "description": "delete session",
      "request": {
        "method": "DELETE",
        "path": "/v1/sessions/22222222-2222-4222-8222-222222222222"
      },
      "response": {
        "status": 204
      }
    },
    {
      "description": "stream task events (SSE placeholder)",
      "request": {
        "headers": {
          "Accept": "text/event-stream"
        },
        "method": "GET",
        "path": "/v1/tasks/11111111-1111-4111-8111-111111111111/stream"
      },
      "response": {
        "body": "event: started\n\ndata: {\"queue_position\":3,\"predicted_start_ms\":420}\n\n\nevent: token\n\ndata: {\"t\":\"Hello\",\"i\":0}\n\n\nevent: end\n\ndata: {\"tokens_out\":1,\"decode_ms\":100}\n\n",
        "headers": {
          "content-type": "text/event-stream"
        },
        "status": 200
      }
    },
    {
      "description": "enqueue task queue full",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "batch",
          "session_id": "44444444-4444-4444-8444-444444444444",
          "task_id": "33333333-3333-4333-8333-333333333333",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "QUEUE_FULL_DROP_LRU",
          "engine": "llamacpp",
          "message": "queue full"
        },
        "headers": {
          "Retry-After": "1",
          "X-Backoff-Ms": "1000",
          "content-type": "application/json"
        },
        "status": 429
      }
    },
    {
      "description": "admission reject (policy)",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "session_id": "66666666-6666-4666-8666-666666666666",
          "task_id": "55555555-5555-4555-8555-555555555555",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "ADMISSION_REJECT",
          "engine": "llamacpp",
          "message": "reject policy"
        },
        "headers": {
          "Retry-After": "2",
          "X-Backoff-Ms": "2000",
          "content-type": "application/json"
        },
        "status": 429
      }
    },
    {
      "description": "invalid params",
      "request": {
        "body": {
          "ctx": 0,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 0,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "session_id": "88888888-8888-4888-8888-888888888888",
          "task_id": "77777777-7777-4777-8777-777777777777",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "INVALID_PARAMS",
          "engine": "llamacpp",
          "message": "bad request"
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 400
      }
    },
    {
      "description": "pool unready",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "session_id": "aaaaaaaa-aaaa-4aaa-8aaa-aaaaaaaaaaaa",
          "task_id": "99999999-9999-4999-8999-999999999999",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "POOL_UNREADY",
          "engine": "llamacpp",
          "message": "pool not ready"
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 503
      }
    },
    {
      "description": "pool unavailable",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "session_id": "cccccccc-cccc-4ccc-8ccc-cccccccccccc",
          "task_id": "bbbbbbbb-bbbb-4bbb-8bbb-bbbbbbbbbbbb",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "POOL_UNAVAILABLE",
          "engine": "llamacpp",
          "message": "unavailable"
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 503
      }
    },
    {
      "description": "replica exhausted",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "session_id": "eeeeeeee-eeee-4eee-8eee-eeeeeeeeeeee",
          "task_id": "dddddddd-dddd-4ddd-8ddd-dddddddddddd",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "REPLICA_EXHAUSTED",
          "engine": "llamacpp",
          "message": "exhausted"
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 503
      }
    },
    {
      "description": "decode timeout",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "session_id": "12121212-1212-4121-8121-121212121212",
          "task_id": "ffffffff-ffff-4fff-8fff-ffffffffffff",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "DECODE_TIMEOUT",
          "engine": "llamacpp",
          "message": "timeout"
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 500
      }
    },
    {
      "description": "worker reset",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "session_id": "14141414-1414-4141-8141-141414141414",
          "task_id": "13131313-1313-4131-8131-131313131313",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "WORKER_RESET",
          "engine": "llamacpp",
          "message": "reset"
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 500
      }
    },
    {
      "description": "internal error",
      "request": {
        "body": {
          "ctx": 8192,
          "deadline_ms": 30000,
          "engine": "llamacpp",
          "max_tokens": 64,
          "model_ref": "sha256:abc",
          "priority": "interactive",
          "session_id": "16161616-1616-4161-8161-161616161616",
          "task_id": "15151515-1515-4151-8151-151515151515",
          "workload": "completion"
        },
        "headers": {
          "content-type": "application/json"
        },
        "method": "POST",
        "path": "/v1/tasks"
      },
      "response": {
        "body": {
          "code": "INTERNAL",
          "engine": "llamacpp",
          "message": "internal"
        },
        "headers": {
          "content-type": "application/json"
        },
        "status": 500
      }
    }
  ],
  "pactSpecification": {
    "version": "3.0.0"
  },
  "provider": {
    "name": "orchestratord"
  }
}