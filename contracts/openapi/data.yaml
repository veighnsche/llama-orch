openapi: 3.0.3
info:
  title: Orchestrator Data Plane API — OrchQueue v1
  version: 1.0.0
  description: |
    Public queue-centric API for task admission and streaming results.
    See .specs/00_llama-orch.md §6.2.
servers:
  - url: /
paths:
  /v1/tasks:
    post:
      operationId: createTask
      summary: Enqueue a task
      x-req-id:
        - ORCH-2001
        - ORCH-2008
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
            x-examples:
              good:
                value:
                  task_id: "00000000-0000-0000-0000-000000000001"
                  session_id: "11111111-1111-1111-1111-111111111111"
                  workload: completion
                  model_ref: "repo:NousResearch/Meta-Llama-3-8B-Instruct"
                  engine: llamacpp
                  ctx: 8192
                  priority: interactive
                  seed: 123456789
                  determinism: strict
                  sampler_profile_version: "v1"
                  prompt: "Hello"
                  max_tokens: 64
                  deadline_ms: 30000
              bad_invalid_params:
                value:
                  task_id: "not-a-uuid"
      responses:
        '202':
          description: Accepted
          headers:
            X-Correlation-Id:
              description: Correlation ID for tracing
              schema: { type: string }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdmissionResponse'
              x-examples:
                accepted:
                  value:
                    task_id: "00000000-0000-0000-0000-000000000001"
                    queue_position: 3
                    predicted_start_ms: 420
                    backoff_ms: 0
        '400':
          description: Invalid params
          headers:
            X-Correlation-Id:
              description: Correlation ID for tracing
              schema: { type: string }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '401': { description: Unauthorized }
        '403': { description: Forbidden }
        '429':
          description: Queue full / backpressure
          headers:
            Retry-After:
              schema: { type: string }
            X-Backoff-Ms:
              schema: { type: integer, format: int64 }
            X-Correlation-Id:
              description: Correlation ID for tracing
              schema: { type: string }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              x-examples:
                backpressure:
                  value:
                    code: "QUEUE_FULL_DROP_LRU"
                    message: "Queue saturated; try later"
                    engine: "vllm"
                    retriable: true
                    retry_after_ms: 1500
                    policy_label: "drop-lru"
          x-req-id:
            - ORCH-2007
        '503': { description: Pool unavailable }
        '500': { description: Internal error }

  /v1/tasks/{id}/stream:
    get:
      operationId: streamTask
      summary: Stream task events (SSE)
      x-req-id:
        - ORCH-2002
      x-sse-events:
        - name: started
          schema: { $ref: '#/components/schemas/SSEStarted' }
        - name: token
          schema: { $ref: '#/components/schemas/SSEToken' }
        - name: metrics
          schema: { $ref: '#/components/schemas/SSEMetrics' }
        - name: end
          schema: { $ref: '#/components/schemas/SSEEnd' }
        - name: error
          schema: { $ref: '#/components/schemas/SSEError' }
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200':
          description: text/event-stream
          headers:
            X-Correlation-Id:
              description: Correlation ID for tracing
              schema: { type: string }
          content:
            text/event-stream:
              schema:
                type: string
          x-examples:
            sse_frames:
              value: |
                event: started
                data: {"queue_position":3,"predicted_start_ms":420}

                event: token
                data: {"t":"Hello","i":0}

                event: end
                data: {"tokens_out":64,"decode_ms":2300}

  /v1/tasks/{id}/cancel:
    post:
      operationId: cancelTask
      summary: Cancel a running or queued task
      x-req-id:
        - ORCH-2003
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204':
          description: No Content
          headers:
            X-Correlation-Id:
              description: Correlation ID for tracing
              schema: { type: string }

  /v1/sessions/{id}:
    get:
      operationId: getSession
      summary: Get session info
      x-req-id:
        - ORCH-2004
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200':
          description: Session info
          headers:
            X-Correlation-Id:
              description: Correlation ID for tracing
              schema: { type: string }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
    delete:
      operationId: deleteSession
      summary: Delete a session and evict KV
      x-req-id:
        - ORCH-2005
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: No Content }

components:
  schemas:
    Engine:
      type: string
      description: Engine used by the worker/pool.
      enum: [llamacpp, vllm, tgi, triton]
      x-req-id: [ORCH-2008]

    Workload:
      type: string
      enum: [completion, embedding, rerank]

    DeterminismLevel:
      type: string
      enum: [strict, best_effort]

    Priority:
      type: string
      enum: [interactive, batch]

    KVHint:
      type: string
      enum: [reuse, cold]

    TaskRequest:
      type: object
      required: [task_id, session_id, workload, model_ref, engine, ctx, priority, max_tokens, deadline_ms]
      properties:
        task_id: { type: string, format: uuid }
        session_id: { type: string, format: uuid }
        workload: { $ref: '#/components/schemas/Workload' }
        model_ref: { type: string }
        engine: { $ref: '#/components/schemas/Engine' }
        ctx: { type: integer, format: int32 }
        priority: { $ref: '#/components/schemas/Priority' }
        seed: { type: integer, format: int64 }
        determinism: { $ref: '#/components/schemas/DeterminismLevel' }
        sampler_profile_version: { type: string }
        prompt: { type: string }
        inputs: { type: array, items: { type: string } }
        max_tokens: { type: integer, format: int32 }
        deadline_ms: { type: integer, format: int64 }
        expected_tokens: { type: integer, format: int32 }
        kv_hint: { $ref: '#/components/schemas/KVHint' }

    AdmissionResponse:
      type: object
      required: [task_id, queue_position, predicted_start_ms, backoff_ms]
      properties:
        task_id: { type: string, format: uuid }
        queue_position: { type: integer, format: int32 }
        predicted_start_ms: { type: integer, format: int64 }
        backoff_ms: { type: integer, format: int64 }

    ErrorKind:
      type: string
      enum:
        - ADMISSION_REJECT
        - QUEUE_FULL_DROP_LRU
        - INVALID_PARAMS
        - POOL_UNREADY
        - POOL_UNAVAILABLE
        - REPLICA_EXHAUSTED
        - DECODE_TIMEOUT
        - WORKER_RESET
        - INTERNAL
        - DEADLINE_UNMET
        - MODEL_DEPRECATED
        - UNTRUSTED_ARTIFACT

    ErrorEnvelope:
      type: object
      x-req-id: [ORCH-2006]
      properties:
        code: { $ref: '#/components/schemas/ErrorKind' }
        message: { type: string }
        engine: { $ref: '#/components/schemas/Engine' }
        retriable: { type: boolean }
        retry_after_ms: { type: integer, format: int64 }
        policy_label: { type: string }

    SessionInfo:
      type: object
      properties:
        ttl_ms_remaining: { type: integer, format: int64 }
        turns: { type: integer, format: int32 }
        kv_bytes: { type: integer, format: int64 }
        kv_warmth: { type: boolean }

    SSEStarted:
      type: object
      required: [queue_position, predicted_start_ms]
      properties:
        queue_position: { type: integer, format: int32 }
        predicted_start_ms: { type: integer, format: int64 }
      example: { queue_position: 3, predicted_start_ms: 420 }

    SSEToken:
      type: object
      required: [t, i]
      properties:
        t: { type: string, description: Token text }
        i: { type: integer, format: int32, description: Incremental token index }
      example: { t: "Hello", i: 0 }

    SSEMetrics:
      type: object
      description: Engine/pool specific snapshot; fields may be added in a backward-compatible way.
      properties:
        on_time_probability: { type: number, format: float, description: Probability of on-time completion given current load }
      additionalProperties: true
      example: { kv_warmth: true, queue_depth: 2 }

    SSEEnd:
      type: object
      required: [tokens_out, decode_ms]
      properties:
        tokens_out: { type: integer, format: int32 }
        decode_ms: { type: integer, format: int64 }
      example: { tokens_out: 64, decode_ms: 2300 }

    SSEError:
      type: object
      required: [code, message]
      properties:
        code: { $ref: '#/components/schemas/ErrorKind' }
        message: { type: string }
        engine: { $ref: '#/components/schemas/Engine' }
      example: { code: 'POOL_UNAVAILABLE', message: 'GPU outage', engine: 'vllm' }

x-generated: true
